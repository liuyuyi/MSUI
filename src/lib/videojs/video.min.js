
;(function ($) {

    var VideoPlayer = function (elem) {
        this.elem = elem;
        this.videoElem = elem.find('video')[0];
    }
    VideoPlayer.prototype.init = function () {

        // var shtml ='<div class="video-controls">'+
        //     '<div class="progress clearfix">' +
        //     '<div class="bar"></div>' +
        //     '<div class="loaded"></div>' +
        //     '<div class="elapse"></div>' +
        //     '</div>' +
        //     '<div class="video-btn-list left">' +
        //     '<a href="javascript:;" class="video-btn play iconfont icon-bofang"></a>' +
        //     '<a href="javascript:;" class="video-btn volume iconfont icon-zengdayinliang"></a>' +
        //     '</div>' +
        //     '<div class="video-volume left">' +
        //     '<div class="video-volume-progress"></div>' +
        //     '</div>' +
        //     // '<div class="full-screen right">' +
        //     // '<a href="javascript:;" class="video-btn full iconfont icon-fullscreen"></a>' +
        //     // '</div>' +
        //     '<div class="time right">' +
        //     '<span class="currentTime">00:00:00</span>\<span class="totalTime">00:00:00</span>' +
        //     '</div>' +
        // '</div>';

        // this.elem.append(shtml);
        this.btnInit();
        this.handlebind();
        this.onprogress();
        this.ontimeupdate();
        this.onended();
        this.oncanplay();

    };
    VideoPlayer.prototype.handlebind = function () {

        var self = this,
            elem = self.elem,
            videoElem = self.videoElem;

        elem.find(".play").on('click', function () {

            if (videoElem.paused) {
                videoElem.play();
            }
            else {
                videoElem.pause();
            }
            $(this).toggleClass("icon-bofang icon-bofang1");

        });

        elem.find(".full").on('click', function () {

            if (elem.hasClass('video-fullscreen')) {
                self.exitFullscreen();
                elem.removeClass('video-fullscreen');
            } else {
                self.requestFullScreen();
                elem.addClass('video-fullscreen');
            }

        });

        elem.find(".bar").on('click', function (e) {

            var offset = e.offsetX,
                percent = offset / $(this).width(),
                current = percent * videoElem.duration;

            videoElem.currentTime = current;

        });
        
        // elem.find(".video-volume-progress").click(function (e) {

        //     var offset = e.offsetX,
        //         percent = offset / $(this).width(),
        //         volume = percent * videoElem.volume;

        //     videoElem.volume = volume;

        //     $(this).css('width', percent*100+'%');

        // });
        var proW = 0,
            proX = 0,
            proL = 0;

        elem.find('.video-rang').on('touchstart',function (e) {

            proW = $(this).parent().width();
            proL = $(this).position().left;
            proX = e.touches[0].pageX;

        });

        elem.find('.video-volume').on('touchmove', function (e) {

            var percent = ((proL + (e.touches[0].pageX - proX)) / proW).toFixed(2),
                moveX = percent * 100,
                volume = 0;
            
            if (moveX < 0){

                moveX = 0;
                percent = 0;

            } else if (moveX > 100){

                moveX = 100;
                percent = 1;

            }
            
            volume = (percent * 1).toFixed(2);

            $('.video-volume-progress').css('width', moveX+'%');
            $('.video-rang').css('left', moveX+'%');
            
            videoElem.volume = volume;

            if (volume == 0) {
                $('.volume').removeClass('icon-zengdayinliang').addClass('icon-guanbiyinliang');
            } else {
                $('.volume').removeClass('icon-guanbiyinliang').addClass('icon-zengdayinliang');
            }

        });
        
        elem.find(".volume").on('click', function (e) {
            
            if($(this).hasClass('icon-zengdayinliang')){
                videoElem.muted = true;
                $(this).removeClass('icon-zengdayinliang').addClass('icon-guanbiyinliang');
                $('.video-volume-progress').css('width','0%');
                $('.video-rang').css('left','0%');
            }else{
                videoElem.muted = false;
                $(this).removeClass('icon-guanbiyinliang').addClass('icon-zengdayinliang');
                videoElem.volume = 0.5
                $('.video-volume-progress').css('width', '50%');
                $('.video-rang').css('left', '50%');
            }

        });

    }
    VideoPlayer.prototype.ontimeupdate = function () {

        var self = this,
            elem = self.elem,
            videoElem = self.videoElem;

        videoElem.ontimeupdate = function (e) {
            
            if (!e.target.paused){
                /*1.获取当前的播放时间*/
                var current = e.target.currentTime;
                /*2.计算出时分秒*/
                var result = self.getResult(current);
                /*3.将结果展示在指定的dom元素中*/
                elem.find(".currentTime").html(result);
                /*4.设置当前播放进度条样式  0.12>>0.12*100=12+%>12%*/
                var percent = current / videoElem.duration * 100 + "%";
                elem.find(".elapse").css("width", percent);
            }
        }

    }

    VideoPlayer.prototype.onprogress = function () {

        var self = this,
            elem = self.elem,
            videoElem = self.videoElem;

        videoElem.onprogress = function (e) {
            
            if (e.target.buffered.length > 0 && e.target.paused !== true) {

                var videoTarget = e.target,
                    duration = Math.round(videoTarget.duration) * 1,
                    bufferedEnd = Math.round(videoTarget.buffered.end(0)) * 1;

                // if (e.target.readyState < 2) {
                //     e.target.pause();
                // } else {
                //     e.target.play();
                // }

                elem.find('.loaded').css('width', (bufferedEnd / duration).toFixed(2) * 100 + '%');

            }
        }

    }

    VideoPlayer.prototype.onended = function () {

        var self = this,
            elem = self.elem,
            videoElem = self.videoElem;

        videoElem.onended = function (e) {
            
            e.target.currentTime = 0;

            elem.find(".play").removeClass("icon-bofang1").addClass("icon-bofang");

        }

    }

    VideoPlayer.prototype.oncanplay = function () {

        var self = this,
            elem = self.elem,
            videoElem = self.videoElem;

        videoElem.oncanplay = function (e) {
            
            var total = e.target.duration,
                result = self.getResult(total);

            elem.find(".totalTime").html(result);

        }

    }

    VideoPlayer.prototype.getResult = function (time) {

        var hour = Math.floor(time / 3600);
        hour = hour < 10 ? "0" + hour : hour;
        var minute = Math.floor(time % 3600 / 60);
        minute = minute < 10 ? "0" + minute : minute;
        var second = Math.floor(time % 60);
        second = second < 10 ? "0" + second : second;

        return hour + ":" + minute + ":" + second;
    }

    VideoPlayer.prototype.requestFullScreen = function () {
        var de = this.videoElem;
        if (de.requestFullscreen) {
            de.requestFullscreen();
        } else if (de.mozRequestFullScreen) {
            de.mozRequestFullScreen();
        } else if (de.webkitRequestFullScreen) {
            de.webkitRequestFullScreen();
        }
    }

    VideoPlayer.prototype.exitFullscreen = function () {
        var de = this.videoElem;
        if (de.exitFullscreen) {
            de.exitFullscreen();
        } else if (de.mozCancelFullScreen) {
            de.mozCancelFullScreen();
        } else if (de.webkitCancelFullScreen) {
            de.webkitCancelFullScreen();
        }
    }

    VideoPlayer.prototype.stopVideo = function () {
        
        var self = this;
        
        self.videoElem.pause();
        
    }

    VideoPlayer.prototype.btnInit = function () {
        
        var self = this,
            elem = self.elem;
        
        elem.find('.elapse').css('width', '0%');
        elem.find(".play").removeClass("icon-bofang1").addClass("icon-bofang");
        elem.find('.loaded').css('width', '0%');

    }

    $.fn.videoPlayer = function () {

        var $this = this,
            videoPlayer = new VideoPlayer($this);
        videoPlayer.init();

        return videoPlayer;

    }

})(Zepto);